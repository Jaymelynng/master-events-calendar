{"ast":null,"code":"import{supabase}from'./supabase';// Gyms API\nexport const gymsApi={async getAll(){const{data,error}=await supabase.from('gyms').select('*').order('name');if(error)throw new Error(error.message);return data;},async create(gym){const{data,error}=await supabase.from('gyms').insert([gym]).select().single();if(error)throw new Error(error.message);return data;},async update(id,updates){const{data,error}=await supabase.from('gyms').update(updates).eq('id',id).select().single();if(error)throw new Error(error.message);return data;},async delete(id){const{error}=await supabase.from('gyms').delete().eq('id',id);if(error)throw new Error(error.message);}};// Events API\nexport const eventsApi={async getAll(startDate,endDate){let query=supabase.from('events_with_gym').select('*').order('date',{ascending:true});if(startDate){query=query.gte('date',startDate);}if(endDate){query=query.lte('date',endDate);}const{data,error}=await query;if(error)throw new Error(error.message);return data;},async create(event){// First get the gym name for the event\nconst{data:gym}=await supabase.from('gyms').select('name').eq('id',event.gym_id).single();const{data,error}=await supabase.from('events').insert([event]).select().single();if(error)throw new Error(error.message);// Add gym_name for frontend compatibility\nreturn{...data,gym_name:(gym===null||gym===void 0?void 0:gym.name)||'Unknown'};},async update(id,updates){const{data,error}=await supabase.from('events').update(updates).eq('id',id).select().single();if(error)throw new Error(error.message);// Get gym name if gym_id was updated\nif(updates.gym_id){const{data:gym}=await supabase.from('gyms').select('name').eq('id',updates.gym_id).single();data.gym_name=(gym===null||gym===void 0?void 0:gym.name)||'Unknown';}return data;},async delete(id){const{error}=await supabase.from('events').delete().eq('id',id);if(error)throw new Error(error.message);}};","map":{"version":3,"names":["supabase","gymsApi","getAll","data","error","from","select","order","Error","message","create","gym","insert","single","update","id","updates","eq","delete","eventsApi","startDate","endDate","query","ascending","gte","lte","event","gym_id","gym_name","name"],"sources":["C:/Users/Jayme/App projects/MASTER EVENTS/src/lib/api.js"],"sourcesContent":["import { supabase } from './supabase'\r\n\r\n// Gyms API\r\nexport const gymsApi = {\r\n  async getAll() {\r\n    const { data, error } = await supabase\r\n      .from('gyms')\r\n      .select('*')\r\n      .order('name')\r\n    \r\n    if (error) throw new Error(error.message)\r\n    return data\r\n  },\r\n\r\n  async create(gym) {\r\n    const { data, error } = await supabase\r\n      .from('gyms')\r\n      .insert([gym])\r\n      .select()\r\n      .single()\r\n    \r\n    if (error) throw new Error(error.message)\r\n    return data\r\n  },\r\n\r\n  async update(id, updates) {\r\n    const { data, error } = await supabase\r\n      .from('gyms')\r\n      .update(updates)\r\n      .eq('id', id)\r\n      .select()\r\n      .single()\r\n    \r\n    if (error) throw new Error(error.message)\r\n    return data\r\n  },\r\n\r\n  async delete(id) {\r\n    const { error } = await supabase\r\n      .from('gyms')\r\n      .delete()\r\n      .eq('id', id)\r\n    \r\n    if (error) throw new Error(error.message)\r\n  }\r\n}\r\n\r\n// Events API\r\nexport const eventsApi = {\r\n  async getAll(startDate, endDate) {\r\n    let query = supabase\r\n      .from('events_with_gym')\r\n      .select('*')\r\n      .order('date', { ascending: true })\r\n    \r\n    if (startDate) {\r\n      query = query.gte('date', startDate)\r\n    }\r\n    if (endDate) {\r\n      query = query.lte('date', endDate)\r\n    }\r\n    \r\n    const { data, error } = await query\r\n    \r\n    if (error) throw new Error(error.message)\r\n    return data\r\n  },\r\n\r\n  async create(event) {\r\n    // First get the gym name for the event\r\n    const { data: gym } = await supabase\r\n      .from('gyms')\r\n      .select('name')\r\n      .eq('id', event.gym_id)\r\n      .single()\r\n    \r\n    const { data, error } = await supabase\r\n      .from('events')\r\n      .insert([event])\r\n      .select()\r\n      .single()\r\n    \r\n    if (error) throw new Error(error.message)\r\n    \r\n    // Add gym_name for frontend compatibility\r\n    return {\r\n      ...data,\r\n      gym_name: gym?.name || 'Unknown'\r\n    }\r\n  },\r\n\r\n  async update(id, updates) {\r\n    const { data, error } = await supabase\r\n      .from('events')\r\n      .update(updates)\r\n      .eq('id', id)\r\n      .select()\r\n      .single()\r\n    \r\n    if (error) throw new Error(error.message)\r\n    \r\n    // Get gym name if gym_id was updated\r\n    if (updates.gym_id) {\r\n      const { data: gym } = await supabase\r\n        .from('gyms')\r\n        .select('name')\r\n        .eq('id', updates.gym_id)\r\n        .single()\r\n      \r\n      data.gym_name = gym?.name || 'Unknown'\r\n    }\r\n    \r\n    return data\r\n  },\r\n\r\n  async delete(id) {\r\n    const { error } = await supabase\r\n      .from('events')\r\n      .delete()\r\n      .eq('id', id)\r\n    \r\n    if (error) throw new Error(error.message)\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}